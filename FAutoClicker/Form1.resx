<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAJCYAAAEAIAC4FgAAFgAAACgAAAAkAAAATAAAAAEAIAAAAAAAYBUAAOgDAADoAwAAAAAAAAAA
        AAABAAMBAQADAQAAAAEAAQABAAAAAQAAAAEAAAABAAAAAQABAAEAAQABAAAAAQAAAgEAAAIBAAACAQAA
        AAEAAQABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAA
        AAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEBAQEBAQEBAQEBAQEAAQABAAAAAQAAAAEAAAABAAADAQAA
        CAYAAA0EAAAOBgAADQQGAAYFBgADBQIAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAQABAQIAAQIC
        AgAAAAABAAEAAQABAAEAAAABAAAKAyAYRf8dEk//HRJP/ygVSP8sCib9LA8d/ggAAwkAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAEAAQABAQIAAQEBAQEAAAABAQIAAQAAAwEAAAoBAAAUBgQbSv4AF1X/ABFc/g4T
        Vv4UBzT+IAwm/QkABQwFAAABAgAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAECAgIAAAAAAQAAAAEAAQABAAAAAQEA
        CwIlFkT/CRpH/oPd7P9r3vD/QprS/0+T1/8wZaH+TWWR/h0QIvwqEhb+BgAAAwAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAECAgQAAAAAAQABAAEAAAIBAAALAQAAFQcJGUj9AB5H/m7i7/9g5Oz/QaHB/lGayf8saZr+SWiO/R4Q
        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
        G/kyDR3wDAACBAYAAAEKAwkAAgACAQABAAEAAQABBQUFAAcABjM5Izb6OyUx+5KJe/p4jID2X6C3+1uX
        y/4LEVf8CxFX/l+Wy/xFor7+ceXg/Wzs1/1s7db8cujh/UKiu/1hn7n+VWVd/GtnUfy6u6n7ubys+ouL
        dv2Qinn9TT01+0s7Of3X09j829Dd+y8OIfsvDB3yDQAEBAcAAQEIBQcAAgACAQABAAEAAQABAAAAAQYA
        BUQ4JTb8Oigv+5KKefyJj3f3eIyA+3WElP0ZE036HBRO/XiCk/tzjYT8bJF7+2mTevxAbFf8RGla/XGN
        hPp6jID8io12+pKNdO9JQDH8RT81+re8rfy3var9jox4/JKJe/lLOzv7TTdB+0MhNfpBIzP1CwAEBAQA
        AAEIBQcAAAAAAQABAAEAAQABAAAAAQQAAy00JzP6NScu/JGGfvmSiXv6jop7+YqFhuwkGDz6Jxk9/ZKE
        hvuVjHn9jI12/YuOd/loaFP6aWZS/ZKLePuUi3b7kY90/JCNdPRLQDD4ST8z/bi5rvu2uq78iYx9+Y6J
        fPtNPTb4UTk9+EUmN/o8JTT1BgADBAIAAAEGBgYAAAAAAQABAAEAAQABAAAAAQIAAgIEAAMUCQAEHTwn
        Mfo6JjP82dDd+tXT2v2KhYb9kYWH/TopLvw4Kiz9trqu/LW+qv2Ljnf8j415+ks+NfpJPTb9u7ys+rm+
        qPuQjXT8lIp49Ek9NvlDOjv81dPa+9XU1/uSiH79mIaA+TwnMfg4JjT2BAADBQAAAAEGBgYAAAAAAQAB
        AAEAAAABBQUFAAEBAQEBAAABCAAFHz4kNv08Izn+2M7d+9XU1/2Ki3v7j4t8/DonMfs4JzP9uLey+Le8
        rfGIjXj4jIx4+Es9NvtKPjn8uriv+Lm7rfiMi3n2kIp59009NvhLOj3819Hb/NTR2fqOh4H8koaB9zom
        M/c2JjT1BAADBQAAAAEAAgABAAAAAQEBAQEAAAABAAAAAQAAAAEAAQABAwAAMzwlNP0+JzT8joeB+IaM
        e/qzvqr8t7uv+jcoNP08JDb7Szo9+Uc+Nvq4vq31t76o+ZKKefyUiXv5SEA29UM9OfzV1dX319bT+ZCK
        e/yUiXv4STw5+EY7P/XW0tf52dHb+TYlNvw2JjT3BAADAgIAAAEAAQABAAEAAQAAAAEAAAABAAAAAQAA
        AAEAAQABAQAAGjYoMfw8Ki/6koh89YqMefmxvK/4tLq2+zcnNfk8JDb8TTk++Uk9OPa7u63tu7ys7Y+K
        ffmSiHz0Sz4190c9OPzX1Nfz19TX+IyJfvmSiXv5TDs1+Es7O/rZ0dv218/g8TQmNvk0JzP5BAACBQIA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAACAAAABAIAAAwIAAANSzw4+Uk8OfzT1Nj409Hd+jYl
        Nvs5JTH9CAAAhQgBAGVLPTb4STo4/dnT1/bZ1NX5koh8+JSKefZJPjXyRj47+tfU1/va1djwTjw7+1E5
        O/o6JjP8MyU19QYABRMCAAIOAgAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAgAB
        AAECAAADSTo98Uk5PvfZ0dv32M/c+TglNvw3JTH8AwEBaQQBAHNMPTvvSzo9+trS3fLX0tr3j4mB95OK
        fPVNQDD4TD43/NnR2/Xa0d7xSzo98k45Ovk6JzH7Nicz+QQAAhUAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAgABAAIAAAACAgACAgYAAgRHOz34TDlB+D4lNPs6JTT5BAACYAAB
        AB8CAAAGBAACC0U5QfpGOkL41tHZ+tnU1fqSiXv8lod++DgnM/Y2JTbMCwADBQgAAAIHAAMCAwAABAIA
        AAMAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAgABAAEAAAADAAADAQIA
        AwpHOz3dTTk93zwmM/I2JzP4AwADHAABABkAAgEHAAACFUM5PfdHOEH32NDa69vS2PWUh376lod+9jgo
        L/U2JzPwBAACEwIAAAEBAgABAAEAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQABAAIAAQABAAACAQAAAwIEAAMSBgACFgYAAiEEAAIpAAAACgABABEAAQAKAAAABgQA
        AggIAAIMSTo9+U06O/dPPDb6Szw49gcAAQgCAAIKAAEABQABAAEAAQABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAAAAAAAAAAAAQAAAAEAAAABAAAAAQABAAEAAQABAAAAAQAAAgEAAAMBAAACAQAA
        AAIAAQADAAEABAABAAYAAQADAAEAAQAAAAEEAAAPSTw5+k07OfdLOzn2Rzs79wIAABYAAAABAAEAAQAB
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQIA
        AAECAAABBAAAAQIAAAEAAAABAAAAAQABAAECAAABAAEAAQABAAIAAQABAAEAAQABAAEAAQACBQIACgUB
        AAwCAAIOAAACEwAAAAMAAAABAAAAAQAAAAECAAIBAgACAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQIAAgEEAAABBgAAAQQBAAEAAQABAAEAAQIAAAECAAABAAEAAQAB
        AAEAAQABAAEAAQACAAEAAgABAAIAAQABAAEAAAQBAAAEAQAAAgEAAgEBAQADAQIAAgEEAAIBBAACAQIA
        AAEAAAABAAAAAQAAAAEAAAAOAAAAAAAAAAfAAAAAIAAA/8AAAAAAAAAPAAAAAIAAAAAAAAAAgAAgAAAA
        AAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAgAAAAAAA
        AACAAAAAAAAAAIgAAAAAAAAAiAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAMAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>